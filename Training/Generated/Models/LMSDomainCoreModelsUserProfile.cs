// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSDomainCoreModelsUserProfile
    {
        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsUserProfile
        /// class.
        /// </summary>
        public LMSDomainCoreModelsUserProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsUserProfile
        /// class.
        /// </summary>
        public LMSDomainCoreModelsUserProfile(int? id = default(int?), LMSDomainCoreModelsUser user = default(LMSDomainCoreModelsUser), string schoolId = default(string), LMSDomainCoreModelsSchool school = default(LMSDomainCoreModelsSchool), int? gender = default(int?), System.DateTime? birthDate = default(System.DateTime?), string secondaryEmail = default(string), bool? secondaryEmailConfirmed = default(bool?), string telephone = default(string), string interests = default(string), string activities = default(string), int? countryId = default(int?), LMSDomainCoreModelsCountry country = default(LMSDomainCoreModelsCountry), string profilePictureId = default(string), string profilePictureUrl = default(string), string profilePictureUrlSmall = default(string), string skypeId = default(string), System.DateTime? creationDate = default(System.DateTime?), int? createdBy = default(int?), System.DateTime? lastModificationDate = default(System.DateTime?), int? modifiedBy = default(int?))
        {
            Id = id;
            User = user;
            SchoolId = schoolId;
            School = school;
            Gender = gender;
            BirthDate = birthDate;
            SecondaryEmail = secondaryEmail;
            SecondaryEmailConfirmed = secondaryEmailConfirmed;
            Telephone = telephone;
            Interests = interests;
            Activities = activities;
            CountryId = countryId;
            Country = country;
            ProfilePictureId = profilePictureId;
            ProfilePictureUrl = profilePictureUrl;
            ProfilePictureUrlSmall = profilePictureUrlSmall;
            SkypeId = skypeId;
            CreationDate = creationDate;
            CreatedBy = createdBy;
            LastModificationDate = lastModificationDate;
            ModifiedBy = modifiedBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int? Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "User")]
        public LMSDomainCoreModelsUser User { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolId")]
        public string SchoolId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "School")]
        public LMSDomainCoreModelsSchool School { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Gender")]
        public int? Gender { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BirthDate")]
        public System.DateTime? BirthDate { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SecondaryEmail")]
        public string SecondaryEmail { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SecondaryEmailConfirmed")]
        public bool? SecondaryEmailConfirmed { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Telephone")]
        public string Telephone { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Interests")]
        public string Interests { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Activities")]
        public string Activities { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CountryId")]
        public int? CountryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Country")]
        public LMSDomainCoreModelsCountry Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProfilePictureId")]
        public string ProfilePictureId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProfilePictureUrl")]
        public string ProfilePictureUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProfilePictureUrlSmall")]
        public string ProfilePictureUrlSmall { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SkypeId")]
        public string SkypeId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationDate")]
        public System.DateTime? CreationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedBy")]
        public int? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastModificationDate")]
        public System.DateTime? LastModificationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModifiedBy")]
        public int? ModifiedBy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (User != null)
            {
                User.Validate();
            }
            if (Country != null)
            {
                Country.Validate();
            }
        }
    }
}
