// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreCommandsMaterialOrderCommand
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsMaterialOrderCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsMaterialOrderCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsMaterialOrderCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsMaterialOrderCommand(IList<LMSApplicationCoreCommandsMaterialCommand> materialsOrder = default(IList<LMSApplicationCoreCommandsMaterialCommand>), string contextId = default(string), int? contextTypeId = default(int?), string parentContextId = default(string), int? parentContextTypeId = default(int?))
        {
            MaterialsOrder = materialsOrder;
            ContextId = contextId;
            ContextTypeId = contextTypeId;
            ParentContextId = parentContextId;
            ParentContextTypeId = parentContextTypeId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaterialsOrder")]
        public IList<LMSApplicationCoreCommandsMaterialCommand> MaterialsOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextId")]
        public string ContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextTypeId")]
        public int? ContextTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentContextId")]
        public string ParentContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentContextTypeId")]
        public int? ParentContextTypeId { get; set; }

    }
}
