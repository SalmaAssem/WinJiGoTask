// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreCommandsAddCourseCommand
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsAddCourseCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsAddCourseCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsAddCourseCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsAddCourseCommand(int? courseGroupId = default(int?), int? copiedFromId = default(int?), string title = default(string), System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? isMappedGroup = default(bool?), LMSInfrastructureOffice365ContractsGroup mappedGroup = default(LMSInfrastructureOffice365ContractsGroup), string groupAlias = default(string), int? maxCapacity = default(int?), int? joiningSettings = default(int?), bool? isCertificateEnabled = default(bool?), string location = default(string), int? creditHours = default(int?), int? instructorId = default(int?))
        {
            CourseGroupId = courseGroupId;
            CopiedFromId = copiedFromId;
            Title = title;
            StartDate = startDate;
            EndDate = endDate;
            IsMappedGroup = isMappedGroup;
            MappedGroup = mappedGroup;
            GroupAlias = groupAlias;
            MaxCapacity = maxCapacity;
            JoiningSettings = joiningSettings;
            IsCertificateEnabled = isCertificateEnabled;
            Location = location;
            CreditHours = creditHours;
            InstructorId = instructorId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseGroupId")]
        public int? CourseGroupId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CopiedFromId")]
        public int? CopiedFromId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StartDate")]
        public System.DateTime? StartDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EndDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsMappedGroup")]
        public bool? IsMappedGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MappedGroup")]
        public LMSInfrastructureOffice365ContractsGroup MappedGroup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GroupAlias")]
        public string GroupAlias { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxCapacity")]
        public int? MaxCapacity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "JoiningSettings")]
        public int? JoiningSettings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreditHours")]
        public int? CreditHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorId")]
        public int? InstructorId { get; set; }

    }
}
