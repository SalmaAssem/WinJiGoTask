// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSDomainCoreModelsCourseView
    {
        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsCourseView
        /// class.
        /// </summary>
        public LMSDomainCoreModelsCourseView()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsCourseView
        /// class.
        /// </summary>
        public LMSDomainCoreModelsCourseView(int? id = default(int?), string name = default(string), LMSDomainCoreModelsGrade minGrade = default(LMSDomainCoreModelsGrade), LMSDomainCoreModelsGrade maxGrade = default(LMSDomainCoreModelsGrade), LMSDomainCoreModelsSubjectArea subjectArea = default(LMSDomainCoreModelsSubjectArea), string courseImageUrl = default(string), string accessCode = default(string), bool? isPinned = default(bool?), int? learnersCount = default(int?), double? rate = default(double?), string role = default(string), int? type = default(int?), int? status = default(int?), int? joiningType = default(int?), int? instructorId = default(int?), string instructorName = default(string), string videoUrl = default(string), bool? isPlayCourse = default(bool?), bool? isResumeCourse = default(bool?), string lastViewedMaterial = default(string), string playedCourseId = default(string), IList<LMSDomainCoreModelsRoundBaseViewModel> courseRounds = default(IList<LMSDomainCoreModelsRoundBaseViewModel>), string courseImageFileId = default(string))
        {
            Id = id;
            Name = name;
            MinGrade = minGrade;
            MaxGrade = maxGrade;
            SubjectArea = subjectArea;
            CourseImageUrl = courseImageUrl;
            AccessCode = accessCode;
            IsPinned = isPinned;
            LearnersCount = learnersCount;
            Rate = rate;
            Role = role;
            Type = type;
            Status = status;
            JoiningType = joiningType;
            InstructorId = instructorId;
            InstructorName = instructorName;
            VideoUrl = videoUrl;
            IsPlayCourse = isPlayCourse;
            IsResumeCourse = isResumeCourse;
            LastViewedMaterial = lastViewedMaterial;
            PlayedCourseId = playedCourseId;
            CourseRounds = courseRounds;
            CourseImageFileId = courseImageFileId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MinGrade")]
        public LMSDomainCoreModelsGrade MinGrade { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxGrade")]
        public LMSDomainCoreModelsGrade MaxGrade { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubjectArea")]
        public LMSDomainCoreModelsSubjectArea SubjectArea { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageUrl")]
        public string CourseImageUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccessCode")]
        public string AccessCode { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPinned")]
        public bool? IsPinned { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LearnersCount")]
        public int? LearnersCount { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Rate")]
        public double? Rate { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Role")]
        public string Role { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public int? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public int? Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "JoiningType")]
        public int? JoiningType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorId")]
        public int? InstructorId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorName")]
        public string InstructorName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoUrl")]
        public string VideoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPlayCourse")]
        public bool? IsPlayCourse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsResumeCourse")]
        public bool? IsResumeCourse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastViewedMaterial")]
        public string LastViewedMaterial { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlayedCourseId")]
        public string PlayedCourseId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseRounds")]
        public IList<LMSDomainCoreModelsRoundBaseViewModel> CourseRounds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageFileId")]
        public string CourseImageFileId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MinGrade != null)
            {
                MinGrade.Validate();
            }
            if (MaxGrade != null)
            {
                MaxGrade.Validate();
            }
            if (SubjectArea != null)
            {
                SubjectArea.Validate();
            }
        }
    }
}
