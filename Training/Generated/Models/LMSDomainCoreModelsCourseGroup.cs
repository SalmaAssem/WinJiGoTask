// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSDomainCoreModelsCourseGroup
    {
        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsCourseGroup
        /// class.
        /// </summary>
        public LMSDomainCoreModelsCourseGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsCourseGroup
        /// class.
        /// </summary>
        public LMSDomainCoreModelsCourseGroup(string name = default(string), string description = default(string), string about = default(string), int? subjectId = default(int?), LMSDomainCoreModelsSubjectArea subject = default(LMSDomainCoreModelsSubjectArea), int? courseImageId = default(int?), LMSDomainCoreModelsCourseImage courseImage = default(LMSDomainCoreModelsCourseImage), IList<LMSDomainCoreModelsGrade> courseGrades = default(IList<LMSDomainCoreModelsGrade>), int? joiningType = default(int?), bool? isAutoAccept = default(bool?), int? type = default(int?), string objectivies = default(string), bool? isLearningPathsEnabled = default(bool?), bool? isCourseGamificationEnabled = default(bool?), string learningPathTheme = default(string), bool? removeThemeBackground = default(bool?), bool? isShowLearnersProgress = default(bool?), int? adminId = default(int?), double? rating = default(double?), int? numberOfRaters = default(int?), int? completionCriteria = default(int?), bool? hasPublishedCourses = default(bool?), bool? isCertificateEnabled = default(bool?), bool? isVideoBased = default(bool?), int? copiedFromCourseGroupId = default(int?), string organizationId = default(string), string organizationSchoolId = default(string), bool? isPushed = default(bool?), string videoCoverUrl = default(string), bool? isSessionsLocked = default(bool?), string courseImageFileId = default(string), string courseImageFileSize = default(string), string courseImageFileName = default(string), bool? isDeleted = default(bool?), System.DateTime? launchedDate = default(System.DateTime?), string objectiveFileId = default(string), bool? isEnableAttendance = default(bool?), System.DateTime? creationDate = default(System.DateTime?), int? createdBy = default(int?), System.DateTime? lastModificationDate = default(System.DateTime?), int? modifiedBy = default(int?), int? id = default(int?))
        {
            Name = name;
            Description = description;
            About = about;
            SubjectId = subjectId;
            Subject = subject;
            CourseImageId = courseImageId;
            CourseImage = courseImage;
            CourseGrades = courseGrades;
            JoiningType = joiningType;
            IsAutoAccept = isAutoAccept;
            Type = type;
            Objectivies = objectivies;
            IsLearningPathsEnabled = isLearningPathsEnabled;
            IsCourseGamificationEnabled = isCourseGamificationEnabled;
            LearningPathTheme = learningPathTheme;
            RemoveThemeBackground = removeThemeBackground;
            IsShowLearnersProgress = isShowLearnersProgress;
            AdminId = adminId;
            Rating = rating;
            NumberOfRaters = numberOfRaters;
            CompletionCriteria = completionCriteria;
            HasPublishedCourses = hasPublishedCourses;
            IsCertificateEnabled = isCertificateEnabled;
            IsVideoBased = isVideoBased;
            CopiedFromCourseGroupId = copiedFromCourseGroupId;
            OrganizationId = organizationId;
            OrganizationSchoolId = organizationSchoolId;
            IsPushed = isPushed;
            VideoCoverUrl = videoCoverUrl;
            IsSessionsLocked = isSessionsLocked;
            CourseImageFileId = courseImageFileId;
            CourseImageFileSize = courseImageFileSize;
            CourseImageFileName = courseImageFileName;
            IsDeleted = isDeleted;
            LaunchedDate = launchedDate;
            ObjectiveFileId = objectiveFileId;
            IsEnableAttendance = isEnableAttendance;
            CreationDate = creationDate;
            CreatedBy = createdBy;
            LastModificationDate = lastModificationDate;
            ModifiedBy = modifiedBy;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "About")]
        public string About { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubjectId")]
        public int? SubjectId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Subject")]
        public LMSDomainCoreModelsSubjectArea Subject { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageId")]
        public int? CourseImageId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImage")]
        public LMSDomainCoreModelsCourseImage CourseImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseGrades")]
        public IList<LMSDomainCoreModelsGrade> CourseGrades { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "JoiningType")]
        public int? JoiningType { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAutoAccept")]
        public bool? IsAutoAccept { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public int? Type { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Objectivies")]
        public string Objectivies { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsLearningPathsEnabled")]
        public bool? IsLearningPathsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCourseGamificationEnabled")]
        public bool? IsCourseGamificationEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LearningPathTheme")]
        public string LearningPathTheme { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RemoveThemeBackground")]
        public bool? RemoveThemeBackground { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsShowLearnersProgress")]
        public bool? IsShowLearnersProgress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdminId")]
        public int? AdminId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Rating")]
        public double? Rating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NumberOfRaters")]
        public int? NumberOfRaters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CompletionCriteria")]
        public int? CompletionCriteria { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasPublishedCourses")]
        public bool? HasPublishedCourses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsVideoBased")]
        public bool? IsVideoBased { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CopiedFromCourseGroupId")]
        public int? CopiedFromCourseGroupId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationId")]
        public string OrganizationId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationSchoolId")]
        public string OrganizationSchoolId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPushed")]
        public bool? IsPushed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoCoverUrl")]
        public string VideoCoverUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsSessionsLocked")]
        public bool? IsSessionsLocked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageFileId")]
        public string CourseImageFileId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageFileSize")]
        public string CourseImageFileSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageFileName")]
        public string CourseImageFileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDeleted")]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LaunchedDate")]
        public System.DateTime? LaunchedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFileId")]
        public string ObjectiveFileId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableAttendance")]
        public bool? IsEnableAttendance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationDate")]
        public System.DateTime? CreationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedBy")]
        public int? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastModificationDate")]
        public System.DateTime? LastModificationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModifiedBy")]
        public int? ModifiedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int? Id { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Subject != null)
            {
                Subject.Validate();
            }
            if (CourseImage != null)
            {
                CourseImage.Validate();
            }
            if (CourseGrades != null)
            {
                foreach (var element in CourseGrades)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
