// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelOffice365O365TenantSchoolsViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelOffice365O365TenantSchoolsViewModel
        /// class.
        /// </summary>
        public LMSApplicationCoreViewModelOffice365O365TenantSchoolsViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelOffice365O365TenantSchoolsViewModel
        /// class.
        /// </summary>
        public LMSApplicationCoreViewModelOffice365O365TenantSchoolsViewModel(string schoolId = default(string), string schoolName = default(string), string schoolLogo = default(string), bool? showNameWithLogo = default(bool?), string schoolLogoUrl = default(string), int? learnersAccessLevel = default(int?), bool? allowExternalUsers = default(bool?), bool? isInheritedFromTenant = default(bool?), bool? isCertificateEnabled = default(bool?), string themeName = default(string), bool? isEnableRounds = default(bool?), bool? isEnableTracks = default(bool?), bool? isEnableChatBetweenLearners = default(bool?), bool? isEnableLearnersToAddSpace = default(bool?), bool? isEnableAttendance = default(bool?), bool? isEnableGradebook = default(bool?), bool? disableSwitchNotifications = default(bool?), IList<LMSDomainCoreModelsSubjectArea> subjects = default(IList<LMSDomainCoreModelsSubjectArea>), IList<LMSDomainCoreModelsGrade> grades = default(IList<LMSDomainCoreModelsGrade>), LMSApplicationCoreViewModelAddUpdateGradeViewModel addUpdateGradeResult = default(LMSApplicationCoreViewModelAddUpdateGradeViewModel), LMSApplicationCoreViewModelAddUpdateSubjectViewModel addUpdateSubjectResult = default(LMSApplicationCoreViewModelAddUpdateSubjectViewModel), IList<LMSApplicationCoreViewModelOffice365ManageSubjectViewModel> subjectsWithTranslation = default(IList<LMSApplicationCoreViewModelOffice365ManageSubjectViewModel>), IList<LMSApplicationCoreViewModelOffice365ManageGradeViewModel> gradesWithTranslation = default(IList<LMSApplicationCoreViewModelOffice365ManageGradeViewModel>), string customBackgroundColor = default(string), string customForegroundColor = default(string), string customButtonColor = default(string), int? evaluationCycleTypeId = default(int?), string parentId = default(string), IList<LMSApplicationCoreViewModelEvaluationCycleViewModel> evaluationCycles = default(IList<LMSApplicationCoreViewModelEvaluationCycleViewModel>), IList<LMSApplicationCoreViewModelGradeCreditHoursViewModel> gradeCreditHours = default(IList<LMSApplicationCoreViewModelGradeCreditHoursViewModel>), int? typeId = default(int?), string externalId = default(string), IList<LMSApplicationCoreCommandsAttendanceStatusAddCommand> attendanceStatuses = default(IList<LMSApplicationCoreCommandsAttendanceStatusAddCommand>), int? availableCapacity = default(int?), IList<LMSApplicationCoreViewModelOffice365O365ProvisionedUsersErrorsViewModel> o365ProvisionedUsersErrors = default(IList<LMSApplicationCoreViewModelOffice365O365ProvisionedUsersErrorsViewModel>), IList<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> gradeCategoriesList = default(IList<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel>))
        {
            SchoolId = schoolId;
            SchoolName = schoolName;
            SchoolLogo = schoolLogo;
            ShowNameWithLogo = showNameWithLogo;
            SchoolLogoUrl = schoolLogoUrl;
            LearnersAccessLevel = learnersAccessLevel;
            AllowExternalUsers = allowExternalUsers;
            IsInheritedFromTenant = isInheritedFromTenant;
            IsCertificateEnabled = isCertificateEnabled;
            ThemeName = themeName;
            IsEnableRounds = isEnableRounds;
            IsEnableTracks = isEnableTracks;
            IsEnableChatBetweenLearners = isEnableChatBetweenLearners;
            IsEnableLearnersToAddSpace = isEnableLearnersToAddSpace;
            IsEnableAttendance = isEnableAttendance;
            IsEnableGradebook = isEnableGradebook;
            DisableSwitchNotifications = disableSwitchNotifications;
            Subjects = subjects;
            Grades = grades;
            AddUpdateGradeResult = addUpdateGradeResult;
            AddUpdateSubjectResult = addUpdateSubjectResult;
            SubjectsWithTranslation = subjectsWithTranslation;
            GradesWithTranslation = gradesWithTranslation;
            CustomBackgroundColor = customBackgroundColor;
            CustomForegroundColor = customForegroundColor;
            CustomButtonColor = customButtonColor;
            EvaluationCycleTypeId = evaluationCycleTypeId;
            ParentId = parentId;
            EvaluationCycles = evaluationCycles;
            GradeCreditHours = gradeCreditHours;
            TypeId = typeId;
            ExternalId = externalId;
            AttendanceStatuses = attendanceStatuses;
            AvailableCapacity = availableCapacity;
            O365ProvisionedUsersErrors = o365ProvisionedUsersErrors;
            GradeCategoriesList = gradeCategoriesList;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolId")]
        public string SchoolId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolName")]
        public string SchoolName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolLogo")]
        public string SchoolLogo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShowNameWithLogo")]
        public bool? ShowNameWithLogo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolLogoUrl")]
        public string SchoolLogoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LearnersAccessLevel")]
        public int? LearnersAccessLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AllowExternalUsers")]
        public bool? AllowExternalUsers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsInheritedFromTenant")]
        public bool? IsInheritedFromTenant { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ThemeName")]
        public string ThemeName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableRounds")]
        public bool? IsEnableRounds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableTracks")]
        public bool? IsEnableTracks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableChatBetweenLearners")]
        public bool? IsEnableChatBetweenLearners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableLearnersToAddSpace")]
        public bool? IsEnableLearnersToAddSpace { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableAttendance")]
        public bool? IsEnableAttendance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableGradebook")]
        public bool? IsEnableGradebook { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisableSwitchNotifications")]
        public bool? DisableSwitchNotifications { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Subjects")]
        public IList<LMSDomainCoreModelsSubjectArea> Subjects { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Grades")]
        public IList<LMSDomainCoreModelsGrade> Grades { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddUpdateGradeResult")]
        public LMSApplicationCoreViewModelAddUpdateGradeViewModel AddUpdateGradeResult { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddUpdateSubjectResult")]
        public LMSApplicationCoreViewModelAddUpdateSubjectViewModel AddUpdateSubjectResult { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubjectsWithTranslation")]
        public IList<LMSApplicationCoreViewModelOffice365ManageSubjectViewModel> SubjectsWithTranslation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GradesWithTranslation")]
        public IList<LMSApplicationCoreViewModelOffice365ManageGradeViewModel> GradesWithTranslation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomBackgroundColor")]
        public string CustomBackgroundColor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomForegroundColor")]
        public string CustomForegroundColor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CustomButtonColor")]
        public string CustomButtonColor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EvaluationCycleTypeId")]
        public int? EvaluationCycleTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public string ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EvaluationCycles")]
        public IList<LMSApplicationCoreViewModelEvaluationCycleViewModel> EvaluationCycles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GradeCreditHours")]
        public IList<LMSApplicationCoreViewModelGradeCreditHoursViewModel> GradeCreditHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TypeId")]
        public int? TypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExternalId")]
        public string ExternalId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttendanceStatuses")]
        public IList<LMSApplicationCoreCommandsAttendanceStatusAddCommand> AttendanceStatuses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AvailableCapacity")]
        public int? AvailableCapacity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "O365ProvisionedUsersErrors")]
        public IList<LMSApplicationCoreViewModelOffice365O365ProvisionedUsersErrorsViewModel> O365ProvisionedUsersErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GradeCategoriesList")]
        public IList<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> GradeCategoriesList { get; set; }

    }
}
