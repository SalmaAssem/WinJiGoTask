// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelCourseViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCourseViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCourseViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCourseViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCourseViewModel(int? selectedCourseId = default(int?), LMSDomainCoreModelsCourseGroup course = default(LMSDomainCoreModelsCourseGroup), string instructorName = default(string), int? studentsCount = default(int?), string courseImageUrl = default(string), string instructorProfilePictureUrlSmall = default(string), int? instructorId = default(int?), int? joiningType = default(int?), bool? hasRequests = default(bool?), bool? isAutoAccept = default(bool?), double? rate = default(double?), bool? isPinned = default(bool?), int? type = default(int?), bool? isLearningPathsEnabled = default(bool?), string learningPathTheme = default(string), bool? isShowLearnersProgress = default(bool?), int? courseRequestsCount = default(int?), int? status = default(int?), IList<LMSDomainCoreModelsCourse> courses = default(IList<LMSDomainCoreModelsCourse>), bool? isCourseGamificationEnabled = default(bool?), int? maxCapacity = default(int?), bool? isCertificateEnabled = default(bool?), string location = default(string), bool? isVideoBased = default(bool?), bool? isCanPlayCourse = default(bool?), string videoCoverUrl = default(string), bool? isCanResumeCourse = default(bool?), string resumeCourseMaterialId = default(string), bool? isPushed = default(bool?), int? creditHours = default(int?), int? originalCourseCreditHours = default(int?), bool? isEnableAttendance = default(bool?))
        {
            SelectedCourseId = selectedCourseId;
            Course = course;
            InstructorName = instructorName;
            StudentsCount = studentsCount;
            CourseImageUrl = courseImageUrl;
            InstructorProfilePictureUrlSmall = instructorProfilePictureUrlSmall;
            InstructorId = instructorId;
            JoiningType = joiningType;
            HasRequests = hasRequests;
            IsAutoAccept = isAutoAccept;
            Rate = rate;
            IsPinned = isPinned;
            Type = type;
            IsLearningPathsEnabled = isLearningPathsEnabled;
            LearningPathTheme = learningPathTheme;
            IsShowLearnersProgress = isShowLearnersProgress;
            CourseRequestsCount = courseRequestsCount;
            Status = status;
            Courses = courses;
            IsCourseGamificationEnabled = isCourseGamificationEnabled;
            MaxCapacity = maxCapacity;
            IsCertificateEnabled = isCertificateEnabled;
            Location = location;
            IsVideoBased = isVideoBased;
            IsCanPlayCourse = isCanPlayCourse;
            VideoCoverUrl = videoCoverUrl;
            IsCanResumeCourse = isCanResumeCourse;
            ResumeCourseMaterialId = resumeCourseMaterialId;
            IsPushed = isPushed;
            CreditHours = creditHours;
            OriginalCourseCreditHours = originalCourseCreditHours;
            IsEnableAttendance = isEnableAttendance;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SelectedCourseId")]
        public int? SelectedCourseId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Course")]
        public LMSDomainCoreModelsCourseGroup Course { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorName")]
        public string InstructorName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StudentsCount")]
        public int? StudentsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseImageUrl")]
        public string CourseImageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorProfilePictureUrlSmall")]
        public string InstructorProfilePictureUrlSmall { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorId")]
        public int? InstructorId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "JoiningType")]
        public int? JoiningType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasRequests")]
        public bool? HasRequests { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAutoAccept")]
        public bool? IsAutoAccept { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Rate")]
        public double? Rate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPinned")]
        public bool? IsPinned { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public int? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsLearningPathsEnabled")]
        public bool? IsLearningPathsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LearningPathTheme")]
        public string LearningPathTheme { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsShowLearnersProgress")]
        public bool? IsShowLearnersProgress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseRequestsCount")]
        public int? CourseRequestsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public int? Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Courses")]
        public IList<LMSDomainCoreModelsCourse> Courses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCourseGamificationEnabled")]
        public bool? IsCourseGamificationEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxCapacity")]
        public int? MaxCapacity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsVideoBased")]
        public bool? IsVideoBased { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCanPlayCourse")]
        public bool? IsCanPlayCourse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VideoCoverUrl")]
        public string VideoCoverUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCanResumeCourse")]
        public bool? IsCanResumeCourse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResumeCourseMaterialId")]
        public string ResumeCourseMaterialId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPushed")]
        public bool? IsPushed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreditHours")]
        public int? CreditHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OriginalCourseCreditHours")]
        public int? OriginalCourseCreditHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsEnableAttendance")]
        public bool? IsEnableAttendance { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Course != null)
            {
                Course.Validate();
            }
            if (Courses != null)
            {
                foreach (var element in Courses)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
