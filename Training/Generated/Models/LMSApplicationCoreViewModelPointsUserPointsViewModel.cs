// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelPointsUserPointsViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelPointsUserPointsViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelPointsUserPointsViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelPointsUserPointsViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelPointsUserPointsViewModel(int? userId = default(int?), string contextId = default(string), int? contextTypeId = default(int?), int? lastSeenPoints = default(int?), int? points = default(int?), int? delta = default(int?))
        {
            UserId = userId;
            ContextId = contextId;
            ContextTypeId = contextTypeId;
            LastSeenPoints = lastSeenPoints;
            Points = points;
            Delta = delta;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public int? UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextId")]
        public string ContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextTypeId")]
        public int? ContextTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastSeenPoints")]
        public int? LastSeenPoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Points")]
        public int? Points { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Delta")]
        public int? Delta { get; private set; }

    }
}
