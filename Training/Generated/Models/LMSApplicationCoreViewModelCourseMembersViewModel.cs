// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelCourseMembersViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCourseMembersViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCourseMembersViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCourseMembersViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCourseMembersViewModel(string fullName = default(string), string profilePictureUrl = default(string), int? userId = default(int?), string grade = default(string), string profilePictureUrlSmall = default(string), string email = default(string), bool? isCurrentUser = default(bool?), bool? isCourseTeacher = default(bool?), string skypeId = default(string), string firstName = default(string), string lastName = default(string), bool? isActive = default(bool?), string parentAccessCode = default(string), IList<LMSApplicationCoreViewModelUserBasicInfoViewModel> parents = default(IList<LMSApplicationCoreViewModelUserBasicInfoViewModel>), int? userRole = default(int?), string userRoleId = default(string), int? userRoleCategory = default(int?), string userRoleName = default(string), bool? canUserChangeToAnotherCategory = default(bool?), bool? isPreviousTeacher = default(bool?), System.DateTime? previousTeacherLeavingDate = default(System.DateTime?), bool? isCourseCompleted = default(bool?))
        {
            FullName = fullName;
            ProfilePictureUrl = profilePictureUrl;
            UserId = userId;
            Grade = grade;
            ProfilePictureUrlSmall = profilePictureUrlSmall;
            Email = email;
            IsCurrentUser = isCurrentUser;
            IsCourseTeacher = isCourseTeacher;
            SkypeId = skypeId;
            FirstName = firstName;
            LastName = lastName;
            IsActive = isActive;
            ParentAccessCode = parentAccessCode;
            Parents = parents;
            UserRole = userRole;
            UserRoleId = userRoleId;
            UserRoleCategory = userRoleCategory;
            UserRoleName = userRoleName;
            CanUserChangeToAnotherCategory = canUserChangeToAnotherCategory;
            IsPreviousTeacher = isPreviousTeacher;
            PreviousTeacherLeavingDate = previousTeacherLeavingDate;
            IsCourseCompleted = isCourseCompleted;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FullName")]
        public string FullName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProfilePictureUrl")]
        public string ProfilePictureUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserId")]
        public int? UserId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Grade")]
        public string Grade { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProfilePictureUrlSmall")]
        public string ProfilePictureUrlSmall { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCurrentUser")]
        public bool? IsCurrentUser { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCourseTeacher")]
        public bool? IsCourseTeacher { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SkypeId")]
        public string SkypeId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FirstName")]
        public string FirstName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastName")]
        public string LastName { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsActive")]
        public bool? IsActive { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentAccessCode")]
        public string ParentAccessCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Parents")]
        public IList<LMSApplicationCoreViewModelUserBasicInfoViewModel> Parents { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserRole")]
        public int? UserRole { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserRoleId")]
        public string UserRoleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserRoleCategory")]
        public int? UserRoleCategory { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserRoleName")]
        public string UserRoleName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanUserChangeToAnotherCategory")]
        public bool? CanUserChangeToAnotherCategory { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPreviousTeacher")]
        public bool? IsPreviousTeacher { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousTeacherLeavingDate")]
        public System.DateTime? PreviousTeacherLeavingDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCourseCompleted")]
        public bool? IsCourseCompleted { get; set; }

    }
}
