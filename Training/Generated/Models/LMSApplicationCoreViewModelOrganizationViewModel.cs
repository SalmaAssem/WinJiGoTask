// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelOrganizationViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelOrganizationViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelOrganizationViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelOrganizationViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelOrganizationViewModel(string organizationId = default(string), string title = default(string), string displayName = default(string), bool? isActive = default(bool?), string licenseKey = default(string), int? schoolsCount = default(int?), int? usersCount = default(int?), int? availableUsersCount = default(int?), string organizationLogo = default(string), string organizationAdminEmail = default(string), System.DateTime? licenseEndDate = default(System.DateTime?), string offeringType = default(string), bool? isCertificateEnabled = default(bool?))
        {
            OrganizationId = organizationId;
            Title = title;
            DisplayName = displayName;
            IsActive = isActive;
            LicenseKey = licenseKey;
            SchoolsCount = schoolsCount;
            UsersCount = usersCount;
            AvailableUsersCount = availableUsersCount;
            OrganizationLogo = organizationLogo;
            OrganizationAdminEmail = organizationAdminEmail;
            LicenseEndDate = licenseEndDate;
            OfferingType = offeringType;
            IsCertificateEnabled = isCertificateEnabled;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationId")]
        public string OrganizationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsActive")]
        public bool? IsActive { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LicenseKey")]
        public string LicenseKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolsCount")]
        public int? SchoolsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UsersCount")]
        public int? UsersCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AvailableUsersCount")]
        public int? AvailableUsersCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationLogo")]
        public string OrganizationLogo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationAdminEmail")]
        public string OrganizationAdminEmail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LicenseEndDate")]
        public System.DateTime? LicenseEndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OfferingType")]
        public string OfferingType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

    }
}
