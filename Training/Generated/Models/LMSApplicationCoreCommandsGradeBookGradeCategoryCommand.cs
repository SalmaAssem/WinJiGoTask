// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreCommandsGradeBookGradeCategoryCommand
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsGradeBookGradeCategoryCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsGradeBookGradeCategoryCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsGradeBookGradeCategoryCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsGradeBookGradeCategoryCommand(string gradeCategoryId = default(string), string title = default(string), double? weight = default(double?), bool? isAutoDistributedWeights = default(bool?), int? calculationMode = default(int?), string contextId = default(string), string contexTypeId = default(string), IList<int?> subjectIds = default(IList<int?>), IList<int?> gradesIds = default(IList<int?>), int? colorIndex = default(int?), bool? isDeleted = default(bool?), bool? isUpdated = default(bool?), bool? hasUpdatedGradableItems = default(bool?), IList<LMSApplicationCoreCommandsGradeBookGradableItemCommand> gradableItems = default(IList<LMSApplicationCoreCommandsGradeBookGradableItemCommand>))
        {
            GradeCategoryId = gradeCategoryId;
            Title = title;
            Weight = weight;
            IsAutoDistributedWeights = isAutoDistributedWeights;
            CalculationMode = calculationMode;
            ContextId = contextId;
            ContexTypeId = contexTypeId;
            SubjectIds = subjectIds;
            GradesIds = gradesIds;
            ColorIndex = colorIndex;
            IsDeleted = isDeleted;
            IsUpdated = isUpdated;
            HasUpdatedGradableItems = hasUpdatedGradableItems;
            GradableItems = gradableItems;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GradeCategoryId")]
        public string GradeCategoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Weight")]
        public double? Weight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAutoDistributedWeights")]
        public bool? IsAutoDistributedWeights { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CalculationMode")]
        public int? CalculationMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextId")]
        public string ContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContexTypeId")]
        public string ContexTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SubjectIds")]
        public IList<int?> SubjectIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GradesIds")]
        public IList<int?> GradesIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ColorIndex")]
        public int? ColorIndex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDeleted")]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsUpdated")]
        public bool? IsUpdated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasUpdatedGradableItems")]
        public bool? HasUpdatedGradableItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GradableItems")]
        public IList<LMSApplicationCoreCommandsGradeBookGradableItemCommand> GradableItems { get; set; }

    }
}
