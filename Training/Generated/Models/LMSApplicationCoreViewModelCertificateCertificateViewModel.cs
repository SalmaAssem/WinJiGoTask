// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelCertificateCertificateViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCertificateCertificateViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCertificateCertificateViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCertificateCertificateViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCertificateCertificateViewModel(int? id = default(int?), string name = default(string), string textFilling = default(string), string organizationId = default(string), string organizationName = default(string), string organizationLogoUrl = default(string), int? tenantType = default(int?), string schoolName = default(string), IList<LMSApplicationCoreViewModelCertificateSignatureViewModel> signatures = default(IList<LMSApplicationCoreViewModelCertificateSignatureViewModel>), bool? isCertificateEnabled = default(bool?), string courseName = default(string), string courseGroupName = default(string), bool? enableWhiteLabeling = default(bool?))
        {
            Id = id;
            Name = name;
            TextFilling = textFilling;
            OrganizationId = organizationId;
            OrganizationName = organizationName;
            OrganizationLogoUrl = organizationLogoUrl;
            TenantType = tenantType;
            SchoolName = schoolName;
            Signatures = signatures;
            IsCertificateEnabled = isCertificateEnabled;
            CourseName = courseName;
            CourseGroupName = courseGroupName;
            EnableWhiteLabeling = enableWhiteLabeling;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TextFilling")]
        public string TextFilling { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationId")]
        public string OrganizationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationName")]
        public string OrganizationName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationLogoUrl")]
        public string OrganizationLogoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TenantType")]
        public int? TenantType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchoolName")]
        public string SchoolName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Signatures")]
        public IList<LMSApplicationCoreViewModelCertificateSignatureViewModel> Signatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseName")]
        public string CourseName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseGroupName")]
        public string CourseGroupName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EnableWhiteLabeling")]
        public bool? EnableWhiteLabeling { get; set; }

    }
}
