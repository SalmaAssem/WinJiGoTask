// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSDomainCoreModelsBadgesBadge
    {
        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsBadgesBadge
        /// class.
        /// </summary>
        public LMSDomainCoreModelsBadgesBadge()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LMSDomainCoreModelsBadgesBadge
        /// class.
        /// </summary>
        public LMSDomainCoreModelsBadgesBadge(string title, string message, bool isCustomized, bool isDeleted, int defaultPoints, string id = default(string), string imageRelativePath = default(string), string imageId = default(string), string imageBaseUrl = default(string), string imageUrl = default(string), int? parentId = default(int?), int? parentTypeId = default(int?), int? shapeId = default(int?), LMSDomainCoreModelsBadgesSystemBadgePoints userPoints = default(LMSDomainCoreModelsBadgesSystemBadgePoints), int? points = default(int?), System.DateTime? creationDate = default(System.DateTime?), int? createdBy = default(int?), System.DateTime? lastModificationDate = default(System.DateTime?), int? modifiedBy = default(int?))
        {
            Id = id;
            Title = title;
            Message = message;
            ImageRelativePath = imageRelativePath;
            ImageId = imageId;
            ImageBaseUrl = imageBaseUrl;
            ImageUrl = imageUrl;
            IsCustomized = isCustomized;
            IsDeleted = isDeleted;
            ParentId = parentId;
            ParentTypeId = parentTypeId;
            ShapeId = shapeId;
            DefaultPoints = defaultPoints;
            UserPoints = userPoints;
            Points = points;
            CreationDate = creationDate;
            CreatedBy = createdBy;
            LastModificationDate = lastModificationDate;
            ModifiedBy = modifiedBy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImageRelativePath")]
        public string ImageRelativePath { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImageId")]
        public string ImageId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImageBaseUrl")]
        public string ImageBaseUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImageUrl")]
        public string ImageUrl { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCustomized")]
        public bool IsCustomized { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDeleted")]
        public bool IsDeleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentId")]
        public int? ParentId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ParentTypeId")]
        public int? ParentTypeId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShapeId")]
        public int? ShapeId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultPoints")]
        public int DefaultPoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserPoints")]
        public LMSDomainCoreModelsBadgesSystemBadgePoints UserPoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Points")]
        public int? Points { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationDate")]
        public System.DateTime? CreationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedBy")]
        public int? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastModificationDate")]
        public System.DateTime? LastModificationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModifiedBy")]
        public int? ModifiedBy { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (Message == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Message");
            }
            if (UserPoints != null)
            {
                UserPoints.Validate();
            }
        }
    }
}
