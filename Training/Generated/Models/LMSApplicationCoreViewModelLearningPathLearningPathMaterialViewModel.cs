// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelLearningPathLearningPathMaterialViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelLearningPathLearningPathMaterialViewModel
        /// class.
        /// </summary>
        public LMSApplicationCoreViewModelLearningPathLearningPathMaterialViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelLearningPathLearningPathMaterialViewModel
        /// class.
        /// </summary>
        public LMSApplicationCoreViewModelLearningPathLearningPathMaterialViewModel(string id = default(string), int? activityId = default(int?), string title = default(string), int? materialStatus = default(int?), bool? hasBadge = default(bool?), bool? isBadgeAssigned = default(bool?), IList<LMSApplicationCoreViewModelCourseStudentsViewModel> activityPassedLearners = default(IList<LMSApplicationCoreViewModelCourseStudentsViewModel>), IList<LMSApplicationCoreViewModelCourseStudentsViewModel> activityFailedLearners = default(IList<LMSApplicationCoreViewModelCourseStudentsViewModel>), IList<LMSApplicationCoreViewModelCourseStudentsViewModel> assignees = default(IList<LMSApplicationCoreViewModelCourseStudentsViewModel>), System.DateTime? dueDate = default(System.DateTime?), System.DateTime? creationDate = default(System.DateTime?), bool? isFinalAssessment = default(bool?))
        {
            Id = id;
            ActivityId = activityId;
            Title = title;
            MaterialStatus = materialStatus;
            HasBadge = hasBadge;
            IsBadgeAssigned = isBadgeAssigned;
            ActivityPassedLearners = activityPassedLearners;
            ActivityFailedLearners = activityFailedLearners;
            Assignees = assignees;
            DueDate = dueDate;
            CreationDate = creationDate;
            IsFinalAssessment = isFinalAssessment;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ActivityId")]
        public int? ActivityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaterialStatus")]
        public int? MaterialStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasBadge")]
        public bool? HasBadge { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsBadgeAssigned")]
        public bool? IsBadgeAssigned { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ActivityPassedLearners")]
        public IList<LMSApplicationCoreViewModelCourseStudentsViewModel> ActivityPassedLearners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ActivityFailedLearners")]
        public IList<LMSApplicationCoreViewModelCourseStudentsViewModel> ActivityFailedLearners { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Assignees")]
        public IList<LMSApplicationCoreViewModelCourseStudentsViewModel> Assignees { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DueDate")]
        public System.DateTime? DueDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationDate")]
        public System.DateTime? CreationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsFinalAssessment")]
        public bool? IsFinalAssessment { get; set; }

    }
}
