// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreCommandsCertificateAddEditCertificateCommand
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsCertificateAddEditCertificateCommand
        /// class.
        /// </summary>
        public LMSApplicationCoreCommandsCertificateAddEditCertificateCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsCertificateAddEditCertificateCommand
        /// class.
        /// </summary>
        public LMSApplicationCoreCommandsCertificateAddEditCertificateCommand(bool? isCertificateEnabled = default(bool?), string name = default(string), string textFilling = default(string), IList<LMSApplicationCoreCommandsCertificateAddSignatureCommand> signatures = default(IList<LMSApplicationCoreCommandsCertificateAddSignatureCommand>), string organizationId = default(string))
        {
            IsCertificateEnabled = isCertificateEnabled;
            Name = name;
            TextFilling = textFilling;
            Signatures = signatures;
            OrganizationId = organizationId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCertificateEnabled")]
        public bool? IsCertificateEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TextFilling")]
        public string TextFilling { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Signatures")]
        public IList<LMSApplicationCoreCommandsCertificateAddSignatureCommand> Signatures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OrganizationId")]
        public string OrganizationId { get; set; }

    }
}
