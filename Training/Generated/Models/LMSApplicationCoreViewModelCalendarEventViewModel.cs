// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelCalendarEventViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCalendarEventViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCalendarEventViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCalendarEventViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCalendarEventViewModel(string title = default(string), string type = default(string), System.DateTime? startsAt = default(System.DateTime?), System.DateTime? endsAt = default(System.DateTime?), string parentContextId = default(string), string contextTitle = default(string), string contextValue = default(string), string id = default(string), string childContextTitle = default(string), string childContextId = default(string), bool? isFinalAssessment = default(bool?), bool? isLocked = default(bool?), string sessionId = default(string), bool? isArchived = default(bool?))
        {
            Title = title;
            Type = type;
            StartsAt = startsAt;
            EndsAt = endsAt;
            ParentContextId = parentContextId;
            ContextTitle = contextTitle;
            ContextValue = contextValue;
            Id = id;
            ChildContextTitle = childContextTitle;
            ChildContextId = childContextId;
            IsFinalAssessment = isFinalAssessment;
            IsLocked = isLocked;
            SessionId = sessionId;
            IsArchived = isArchived;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startsAt")]
        public System.DateTime? StartsAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endsAt")]
        public System.DateTime? EndsAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentContextId")]
        public string ParentContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contextTitle")]
        public string ContextTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contextValue")]
        public string ContextValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "childContextTitle")]
        public string ChildContextTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "childContextId")]
        public string ChildContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFinalAssessment")]
        public bool? IsFinalAssessment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsLocked")]
        public bool? IsLocked { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SessionId")]
        public string SessionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsArchived")]
        public bool? IsArchived { get; set; }

    }
}
