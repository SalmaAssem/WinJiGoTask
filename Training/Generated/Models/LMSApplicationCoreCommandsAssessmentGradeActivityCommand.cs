// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreCommandsAssessmentGradeActivityCommand
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsAssessmentGradeActivityCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsAssessmentGradeActivityCommand()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreCommandsAssessmentGradeActivityCommand class.
        /// </summary>
        public LMSApplicationCoreCommandsAssessmentGradeActivityCommand(double score, int? assessmentId = default(int?), string learnerId = default(string), string contextId = default(string), string feedback = default(string), string teacherId = default(string))
        {
            AssessmentId = assessmentId;
            LearnerId = learnerId;
            ContextId = contextId;
            Score = score;
            Feedback = feedback;
            TeacherId = teacherId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssessmentId")]
        public int? AssessmentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LearnerId")]
        public string LearnerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextId")]
        public string ContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Score")]
        public double Score { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Feedback")]
        public string Feedback { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TeacherId")]
        public string TeacherId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
