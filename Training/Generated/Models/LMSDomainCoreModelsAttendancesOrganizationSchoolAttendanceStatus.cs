// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSDomainCoreModelsAttendancesOrganizationSchoolAttendanceStatus
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSDomainCoreModelsAttendancesOrganizationSchoolAttendanceStatus
        /// class.
        /// </summary>
        public LMSDomainCoreModelsAttendancesOrganizationSchoolAttendanceStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSDomainCoreModelsAttendancesOrganizationSchoolAttendanceStatus
        /// class.
        /// </summary>
        public LMSDomainCoreModelsAttendancesOrganizationSchoolAttendanceStatus(string attendanceStatusId, int contextType, string contextId, string displayName, LMSDomainCoreModelsAttendancesAttendanceStatus attendanceStatus = default(LMSDomainCoreModelsAttendancesAttendanceStatus), int? colorId = default(int?), int? order = default(int?), System.DateTime? creationDate = default(System.DateTime?), int? createdBy = default(int?), System.DateTime? lastModificationDate = default(System.DateTime?), int? modifiedBy = default(int?), string id = default(string))
        {
            AttendanceStatusId = attendanceStatusId;
            AttendanceStatus = attendanceStatus;
            ContextType = contextType;
            ContextId = contextId;
            DisplayName = displayName;
            ColorId = colorId;
            Order = order;
            CreationDate = creationDate;
            CreatedBy = createdBy;
            LastModificationDate = lastModificationDate;
            ModifiedBy = modifiedBy;
            Id = id;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttendanceStatusId")]
        public string AttendanceStatusId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttendanceStatus")]
        public LMSDomainCoreModelsAttendancesAttendanceStatus AttendanceStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextType")]
        public int ContextType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContextId")]
        public string ContextId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ColorId")]
        public int? ColorId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Order")]
        public int? Order { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationDate")]
        public System.DateTime? CreationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedBy")]
        public int? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastModificationDate")]
        public System.DateTime? LastModificationDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ModifiedBy")]
        public int? ModifiedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AttendanceStatusId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AttendanceStatusId");
            }
            if (ContextId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ContextId");
            }
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (AttendanceStatus != null)
            {
                AttendanceStatus.Validate();
            }
        }
    }
}
