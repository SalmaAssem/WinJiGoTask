// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelInstructorViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelInstructorViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelInstructorViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelInstructorViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelInstructorViewModel(int? id = default(int?), string fullName = default(string), string profilePictureUrlSmall = default(string), string instructorRounds = default(string), bool? isActive = default(bool?))
        {
            Id = id;
            FullName = fullName;
            ProfilePictureUrlSmall = profilePictureUrlSmall;
            InstructorRounds = instructorRounds;
            IsActive = isActive;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FullName")]
        public string FullName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ProfilePictureUrlSmall")]
        public string ProfilePictureUrlSmall { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "InstructorRounds")]
        public string InstructorRounds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsActive")]
        public bool? IsActive { get; set; }

    }
}
