// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelSessionDetailsViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelSessionDetailsViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelSessionDetailsViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelSessionDetailsViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelSessionDetailsViewModel(LMSDomainCoreModelsSession session = default(LMSDomainCoreModelsSession), bool? isUpdated = default(bool?), IList<LMSApplicationCoreViewModelMaterialDetailsViewModel> materials = default(IList<LMSApplicationCoreViewModelMaterialDetailsViewModel>), IList<int?> failedMaterialsTypes = default(IList<int?>), LMSApplicationCoreViewModelVoiceNoteViewModel voiceNote = default(LMSApplicationCoreViewModelVoiceNoteViewModel), LMSApplicationCoreViewModelAttendanceStatusBasicInfo studentAttendance = default(LMSApplicationCoreViewModelAttendanceStatusBasicInfo), string playUrl = default(string), string objectiveFileId = default(string), string objectiveFileName = default(string), bool? isObjectiveContainsImage = default(bool?), string objectiveFileContentType = default(string), string objectiveFilePlayURL = default(string), string lessonPlanTemplateTitle = default(string), LMSApplicationCoreViewModelUpdatedSessionLessonPlanViewModel sessionLessonPlanTemplate = default(LMSApplicationCoreViewModelUpdatedSessionLessonPlanViewModel), string objectiveFileUri = default(string), string objectiveBlobName = default(string), bool? objectiveFileUnableToPlayOfficeDocument = default(bool?))
        {
            Session = session;
            IsUpdated = isUpdated;
            Materials = materials;
            FailedMaterialsTypes = failedMaterialsTypes;
            VoiceNote = voiceNote;
            StudentAttendance = studentAttendance;
            PlayUrl = playUrl;
            ObjectiveFileId = objectiveFileId;
            ObjectiveFileName = objectiveFileName;
            IsObjectiveContainsImage = isObjectiveContainsImage;
            ObjectiveFileContentType = objectiveFileContentType;
            ObjectiveFilePlayURL = objectiveFilePlayURL;
            LessonPlanTemplateTitle = lessonPlanTemplateTitle;
            SessionLessonPlanTemplate = sessionLessonPlanTemplate;
            ObjectiveFileUri = objectiveFileUri;
            ObjectiveBlobName = objectiveBlobName;
            ObjectiveFileUnableToPlayOfficeDocument = objectiveFileUnableToPlayOfficeDocument;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Session")]
        public LMSDomainCoreModelsSession Session { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsUpdated")]
        public bool? IsUpdated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Materials")]
        public IList<LMSApplicationCoreViewModelMaterialDetailsViewModel> Materials { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FailedMaterialsTypes")]
        public IList<int?> FailedMaterialsTypes { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VoiceNote")]
        public LMSApplicationCoreViewModelVoiceNoteViewModel VoiceNote { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StudentAttendance")]
        public LMSApplicationCoreViewModelAttendanceStatusBasicInfo StudentAttendance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlayUrl")]
        public string PlayUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFileId")]
        public string ObjectiveFileId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFileName")]
        public string ObjectiveFileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsObjectiveContainsImage")]
        public bool? IsObjectiveContainsImage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFileContentType")]
        public string ObjectiveFileContentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFilePlayURL")]
        public string ObjectiveFilePlayURL { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LessonPlanTemplateTitle")]
        public string LessonPlanTemplateTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SessionLessonPlanTemplate")]
        public LMSApplicationCoreViewModelUpdatedSessionLessonPlanViewModel SessionLessonPlanTemplate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFileUri")]
        public string ObjectiveFileUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveBlobName")]
        public string ObjectiveBlobName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ObjectiveFileUnableToPlayOfficeDocument")]
        public bool? ObjectiveFileUnableToPlayOfficeDocument { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Session != null)
            {
                Session.Validate();
            }
        }
    }
}
