// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelCourseCoverInfoViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCourseCoverInfoViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCourseCoverInfoViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelCourseCoverInfoViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelCourseCoverInfoViewModel(int? requestsCount = default(int?), int? learnersCount = default(int?), int? maxCapacity = default(int?), double? rating = default(double?), int? courseStatus = default(int?), System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string location = default(string), bool? isCanPlayCourse = default(bool?), bool? isCanResumeCourse = default(bool?), string resumeCourseMaterialId = default(string), bool? showCreditHours = default(bool?), int? creditHours = default(int?), bool? isArchived = default(bool?))
        {
            RequestsCount = requestsCount;
            LearnersCount = learnersCount;
            MaxCapacity = maxCapacity;
            Rating = rating;
            CourseStatus = courseStatus;
            StartDate = startDate;
            EndDate = endDate;
            Location = location;
            IsCanPlayCourse = isCanPlayCourse;
            IsCanResumeCourse = isCanResumeCourse;
            ResumeCourseMaterialId = resumeCourseMaterialId;
            ShowCreditHours = showCreditHours;
            CreditHours = creditHours;
            IsArchived = isArchived;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RequestsCount")]
        public int? RequestsCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LearnersCount")]
        public int? LearnersCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxCapacity")]
        public int? MaxCapacity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Rating")]
        public double? Rating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CourseStatus")]
        public int? CourseStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StartDate")]
        public System.DateTime? StartDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EndDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Location")]
        public string Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCanPlayCourse")]
        public bool? IsCanPlayCourse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCanResumeCourse")]
        public bool? IsCanResumeCourse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResumeCourseMaterialId")]
        public string ResumeCourseMaterialId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ShowCreditHours")]
        public bool? ShowCreditHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreditHours")]
        public int? CreditHours { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsArchived")]
        public bool? IsArchived { get; set; }

    }
}
