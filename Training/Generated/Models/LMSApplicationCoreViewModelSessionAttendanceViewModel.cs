// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class LMSApplicationCoreViewModelSessionAttendanceViewModel
    {
        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelSessionAttendanceViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelSessionAttendanceViewModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// LMSApplicationCoreViewModelSessionAttendanceViewModel class.
        /// </summary>
        public LMSApplicationCoreViewModelSessionAttendanceViewModel(string id = default(string), string title = default(string), System.DateTime? date = default(System.DateTime?), int? roundId = default(int?), string roundName = default(string), bool? isArchived = default(bool?))
        {
            Id = id;
            Title = title;
            Date = date;
            RoundId = roundId;
            RoundName = roundName;
            IsArchived = isArchived;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Date")]
        public System.DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RoundId")]
        public int? RoundId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RoundName")]
        public string RoundName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsArchived")]
        public bool? IsArchived { get; set; }

    }
}
