// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for LTILMSConsumerApi.
    /// </summary>
    public static partial class LTILMSConsumerApiExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static string GetNewGuid(this ILTILMSConsumerApi operations, string lang)
            {
                return operations.GetNewGuidAsync(lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetNewGuidAsync(this ILTILMSConsumerApi operations, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetNewGuidWithHttpMessagesAsync(lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='materialId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LtiLibraryAspNetLti1LtiRequestViewModel GetLaunchRequest(this ILTILMSConsumerApi operations, string materialId, string lang)
            {
                return operations.GetLaunchRequestAsync(materialId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='materialId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LtiLibraryAspNetLti1LtiRequestViewModel> GetLaunchRequestAsync(this ILTILMSConsumerApi operations, string materialId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLaunchRequestWithHttpMessagesAsync(materialId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='materialAddCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LtiLibraryAspNetLti1LtiRequestViewModel AddMaterialLaunchRequest(this ILTILMSConsumerApi operations, LMSApplicationCoreCommandsMaterialAddCommand materialAddCommand, string lang)
            {
                return operations.AddMaterialLaunchRequestAsync(materialAddCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='materialAddCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LtiLibraryAspNetLti1LtiRequestViewModel> AddMaterialLaunchRequestAsync(this ILTILMSConsumerApi operations, LMSApplicationCoreCommandsMaterialAddCommand materialAddCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddMaterialLaunchRequestWithHttpMessagesAsync(materialAddCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
