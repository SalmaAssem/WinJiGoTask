// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for InviteApi.
    /// </summary>
    public static partial class InviteApiExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='mails'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static void Invite(this IInviteApi operations, IList<string> mails, string lang)
            {
                operations.InviteAsync(mails, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='mails'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task InviteAsync(this IInviteApi operations, IList<string> mails, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.InviteWithHttpMessagesAsync(mails, lang, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inviteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static void InviteToCourse(this IInviteApi operations, LMSApplicationCoreCommandsInviteCommand inviteCommand, string lang)
            {
                operations.InviteToCourseAsync(inviteCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inviteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task InviteToCourseAsync(this IInviteApi operations, LMSApplicationCoreCommandsInviteCommand inviteCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.InviteToCourseWithHttpMessagesAsync(inviteCommand, lang, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inviteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static void InviteToSpace(this IInviteApi operations, LMSApplicationCoreCommandsInviteCommand inviteCommand, string lang)
            {
                operations.InviteToSpaceAsync(inviteCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inviteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task InviteToSpaceAsync(this IInviteApi operations, LMSApplicationCoreCommandsInviteCommand inviteCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.InviteToSpaceWithHttpMessagesAsync(inviteCommand, lang, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inviteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static void InviteToTrack(this IInviteApi operations, LMSApplicationCoreCommandsInviteCommand inviteCommand, string lang)
            {
                operations.InviteToTrackAsync(inviteCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='inviteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task InviteToTrackAsync(this IInviteApi operations, LMSApplicationCoreCommandsInviteCommand inviteCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.InviteToTrackWithHttpMessagesAsync(inviteCommand, lang, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
