// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ReportApi operations.
    /// </summary>
    public partial interface IReportApi
    {
        /// <param name='lang'>
        /// </param>
        /// <param name='orgId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<LMSApplicationCoreViewModelReportOverallReportViewModel>> GetOverallReportWithHttpMessagesAsync(string lang, string orgId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='lang'>
        /// </param>
        /// <param name='orgId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelReportCourseInfoReportViewModel>>> GetCoursesInfoReportWithHttpMessagesAsync(string lang, string orgId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='courseId'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<LMSApplicationCoreViewModelReportCourseReportViewModel>> GetCourseReportWithHttpMessagesAsync(int courseId, string lang, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='courseGroupId'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='dateDuration'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<LMSApplicationCoreViewModelReportCourseReportViewModel>> GetCourseGroupReportWithHttpMessagesAsync(int courseGroupId, string lang, int? dateDuration = default(int?), System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='schoolId'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelReportCourseInfoReportViewModel>>> GetSchoolCoursesInfoReportWithHttpMessagesAsync(string schoolId, string lang, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='schoolId'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<LMSApplicationCoreViewModelReportOverallReportViewModel>> GetTenentSchoolOverallReportWithHttpMessagesAsync(string schoolId, string lang, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='courseId'>
        /// </param>
        /// <param name='isStudentsOnly'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelReportUsageReportViewModel>>> UsageReportWithHttpMessagesAsync(int courseId, bool isStudentsOnly, string lang, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='getCourseGroupData'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetNumberOfCreatedSessionsDetailsWithHttpMessagesAsync(int contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? getCourseGroupData = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='getCourseGroupData'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetNumberOfActivatedSessionsDetailsWithHttpMessagesAsync(int contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? getCourseGroupData = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='getCourseGroupData'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetNumberOfCreatedActivitiesDetailsWithHttpMessagesAsync(int contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? getCourseGroupData = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='getCourseGroupData'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetNumberOfCreatedDiscussionsDetailsWithHttpMessagesAsync(int contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? getCourseGroupData = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='getCourseGroupData'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetNumberOfCreatedPostsDetailsWithHttpMessagesAsync(int contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? getCourseGroupData = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='getCourseGroupData'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetNumberOfAwardedBadgesDetailsWithHttpMessagesAsync(int contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), bool? getCourseGroupData = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='organizationId'>
        /// </param>
        /// <param name='applyOnSubSchools'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReprtCreatedSessionsDetailsWithHttpMessagesAsync(string contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string organizationId = default(string), bool? applyOnSubSchools = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReprtCreatedSessionsDetailsPostWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='organizationId'>
        /// </param>
        /// <param name='applyOnSubSchools'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportActivatedSessionsDetailsWithHttpMessagesAsync(string contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string organizationId = default(string), bool? applyOnSubSchools = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportActivatedSessionsDetailsPostWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<IList<LMSApplicationCoreViewModelChartPointViewModel>>>> GetOverallSessionsDetailsWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='organizationId'>
        /// </param>
        /// <param name='applyOnSubSchools'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedActivitiesDetailsWithHttpMessagesAsync(string contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string organizationId = default(string), bool? applyOnSubSchools = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedActivitiesDetailsPostWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='organizationId'>
        /// </param>
        /// <param name='applyOnSubSchools'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedDiscussionsDetailsWithHttpMessagesAsync(string contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string organizationId = default(string), bool? applyOnSubSchools = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedDiscussionsDetailsPostWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedPollsDetailsWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedSurveysDetailsWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedPostsDetailsWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='organizationId'>
        /// </param>
        /// <param name='applyOnSubSchools'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportAwardedBadgesDetailsWithHttpMessagesAsync(string contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string organizationId = default(string), bool? applyOnSubSchools = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterByCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportAwardedBadgesDetailsPostWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCoursesStatisitcsReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterByCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='statisticsReportCommand'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='getPublishedCoursesOnly'>
        /// </param>
        /// <param name='filterbyCoursePublishedDate'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<IList<LMSApplicationCoreViewModelChartPointViewModel>>>> GetCollaborationReportTimeLineDetailsWithHttpMessagesAsync(LMSApplicationCoreCommandsSystemReportsCollaborationReportCommand statisticsReportCommand, string lang, bool? getPublishedCoursesOnly = default(bool?), bool? filterbyCoursePublishedDate = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <param name='contextId'>
        /// </param>
        /// <param name='chartDuration'>
        /// </param>
        /// <param name='lang'>
        /// </param>
        /// <param name='startDate'>
        /// </param>
        /// <param name='endDate'>
        /// </param>
        /// <param name='organizationId'>
        /// </param>
        /// <param name='applyOnSubSchools'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="Microsoft.Rest.HttpOperationException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<IList<LMSApplicationCoreViewModelChartPointViewModel>>> GetOverallReportCreatedPostssDetailsWithHttpMessagesAsync(string contextId, int chartDuration, string lang, System.DateTime? startDate = default(System.DateTime?), System.DateTime? endDate = default(System.DateTime?), string organizationId = default(string), bool? applyOnSubSchools = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
