// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for GradeBookApi.
    /// </summary>
    public static partial class GradeBookApiExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='pageNumber'>
            /// </param>
            /// <param name='pageSize'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradeBookViewModel GetGradeBookByCourseId(this IGradeBookApi operations, int courseId, string lang, int? pageNumber = default(int?), int? pageSize = default(int?))
            {
                return operations.GetGradeBookByCourseIdAsync(courseId, lang, pageNumber, pageSize).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='pageNumber'>
            /// </param>
            /// <param name='pageSize'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradeBookViewModel> GetGradeBookByCourseIdAsync(this IGradeBookApi operations, int courseId, string lang, int? pageNumber = default(int?), int? pageSize = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGradeBookByCourseIdWithHttpMessagesAsync(courseId, lang, pageNumber, pageSize, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelGradeBookUserGradeBooks> GetGradeBookByStudentId(this IGradeBookApi operations, int studentId, string lang)
            {
                return operations.GetGradeBookByStudentIdAsync(studentId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelGradeBookUserGradeBooks>> GetGradeBookByStudentIdAsync(this IGradeBookApi operations, int studentId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGradeBookByStudentIdWithHttpMessagesAsync(studentId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentId'>
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookUserGradeBooks GetStudentGradeBookByCourseId(this IGradeBookApi operations, int studentId, int courseId, string lang)
            {
                return operations.GetStudentGradeBookByCourseIdAsync(studentId, courseId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='studentId'>
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookUserGradeBooks> GetStudentGradeBookByCourseIdAsync(this IGradeBookApi operations, int studentId, int courseId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetStudentGradeBookByCourseIdWithHttpMessagesAsync(studentId, courseId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradeCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel AddGradeCategory(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradeCategoryCommand addUpdateGradeCategory, string lang)
            {
                return operations.AddGradeCategoryAsync(addUpdateGradeCategory, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradeCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> AddGradeCategoryAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradeCategoryCommand addUpdateGradeCategory, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddGradeCategoryWithHttpMessagesAsync(addUpdateGradeCategory, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoriesList'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel AddGradeCategories(this IGradeBookApi operations, IList<LMSApplicationCoreCommandsGradeBookGradeCategoryCommand> gradeCategoriesList, string lang)
            {
                return operations.AddGradeCategoriesAsync(gradeCategoriesList, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoriesList'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> AddGradeCategoriesAsync(this IGradeBookApi operations, IList<LMSApplicationCoreCommandsGradeBookGradeCategoryCommand> gradeCategoriesList, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddGradeCategoriesWithHttpMessagesAsync(gradeCategoriesList, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUcourseCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel AddCategoryToCourse(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddCourseCategoryCommand addUcourseCategory, string lang)
            {
                return operations.AddCategoryToCourseAsync(addUcourseCategory, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUcourseCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> AddCategoryToCourseAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddCourseCategoryCommand addUcourseCategory, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddCategoryToCourseWithHttpMessagesAsync(addUcourseCategory, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradeCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel UpdateGradeCategory(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradeCategoryCommand addUpdateGradeCategory, string lang)
            {
                return operations.UpdateGradeCategoryAsync(addUpdateGradeCategory, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradeCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> UpdateGradeCategoryAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradeCategoryCommand addUpdateGradeCategory, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateGradeCategoryWithHttpMessagesAsync(addUpdateGradeCategory, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoryDeleteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static object DeleteGradeCategory(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookDeleteGradeCategoryCommand gradeCategoryDeleteCommand, string lang)
            {
                return operations.DeleteGradeCategoryAsync(gradeCategoryDeleteCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoryDeleteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> DeleteGradeCategoryAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookDeleteGradeCategoryCommand gradeCategoryDeleteCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteGradeCategoryWithHttpMessagesAsync(gradeCategoryDeleteCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel> GetGradeCategories(this IGradeBookApi operations, string lang)
            {
                return operations.GetGradeCategoriesAsync(lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelGradeBookGradeCategoryViewModel>> GetGradeCategoriesAsync(this IGradeBookApi operations, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGradeCategoriesWithHttpMessagesAsync(lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookUserScoreSheetViewModel GetUserCourseGrades(this IGradeBookApi operations, int userId, int courseId, string lang)
            {
                return operations.GetUserCourseGradesAsync(userId, courseId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userId'>
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookUserScoreSheetViewModel> GetUserCourseGradesAsync(this IGradeBookApi operations, int userId, int courseId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserCourseGradesWithHttpMessagesAsync(userId, courseId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradableItem'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradableItemViewModel AddGradableItem(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradableItemCommand addUpdateGradableItem, string lang)
            {
                return operations.AddGradableItemAsync(addUpdateGradableItem, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradableItem'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradableItemViewModel> AddGradableItemAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradableItemCommand addUpdateGradableItem, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddGradableItemWithHttpMessagesAsync(addUpdateGradableItem, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradableItem'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradableItemViewModel UpdateGradableItem(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradableItemCommand addUpdateGradableItem, string lang)
            {
                return operations.UpdateGradableItemAsync(addUpdateGradableItem, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addUpdateGradableItem'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradableItemViewModel> UpdateGradableItemAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddUpdateGradableItemCommand addUpdateGradableItem, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateGradableItemWithHttpMessagesAsync(addUpdateGradableItem, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradableIteamDeleteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelGradeBookGradableItemViewModel DeleteGradableItem(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookDeleteGradableItemCommand gradableIteamDeleteCommand, string lang)
            {
                return operations.DeleteGradableItemAsync(gradableIteamDeleteCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradableIteamDeleteCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelGradeBookGradableItemViewModel> DeleteGradableItemAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookDeleteGradableItemCommand gradableIteamDeleteCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteGradableItemWithHttpMessagesAsync(gradableIteamDeleteCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='courseCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static object RemoveGradeCategoryFromCourse(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddCourseCategoryCommand courseCategory, string lang)
            {
                return operations.RemoveGradeCategoryFromCourseAsync(courseCategory, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='courseCategory'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> RemoveGradeCategoryFromCourseAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddCourseCategoryCommand courseCategory, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.RemoveGradeCategoryFromCourseWithHttpMessagesAsync(courseCategory, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='gradableItemId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelGradeBookCourseGradableItemStudentsScores> GetGradableItemCourseStudentScores(this IGradeBookApi operations, int courseId, string gradableItemId, string lang)
            {
                return operations.GetGradableItemCourseStudentScoresAsync(courseId, gradableItemId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='courseId'>
            /// </param>
            /// <param name='gradableItemId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelGradeBookCourseGradableItemStudentsScores>> GetGradableItemCourseStudentScoresAsync(this IGradeBookApi operations, int courseId, string gradableItemId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGradableItemCourseStudentScoresWithHttpMessagesAsync(courseId, gradableItemId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='updateUserScoresCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelGradeBookCourseGradableItemStudentsScores> SaveStudentScores(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookUpdateUserScoresCommand updateUserScoresCommand, string lang)
            {
                return operations.SaveStudentScoresAsync(updateUserScoresCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='updateUserScoresCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelGradeBookCourseGradableItemStudentsScores>> SaveStudentScoresAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookUpdateUserScoresCommand updateUserScoresCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SaveStudentScoresWithHttpMessagesAsync(updateUserScoresCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addStudentsScoresCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static object AddUpdateGradableItemStudentsScores(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddGrabableItemStudentsScoresCommand addStudentsScoresCommand, string lang)
            {
                return operations.AddUpdateGradableItemStudentsScoresAsync(addStudentsScoresCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addStudentsScoresCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> AddUpdateGradableItemStudentsScoresAsync(this IGradeBookApi operations, LMSApplicationCoreCommandsGradeBookAddGrabableItemStudentsScoresCommand addStudentsScoresCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddUpdateGradableItemStudentsScoresWithHttpMessagesAsync(addStudentsScoresCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoryId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelGradeBookGradableItemViewModel> GetGradableItemsInCategory(this IGradeBookApi operations, string gradeCategoryId, string lang)
            {
                return operations.GetGradableItemsInCategoryAsync(gradeCategoryId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoryId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelGradeBookGradableItemViewModel>> GetGradableItemsInCategoryAsync(this IGradeBookApi operations, string gradeCategoryId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetGradableItemsInCategoryWithHttpMessagesAsync(gradeCategoryId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoryId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static bool? IsGradeCategoryAssignedToCourse(this IGradeBookApi operations, string gradeCategoryId, string lang)
            {
                return operations.IsGradeCategoryAssignedToCourseAsync(gradeCategoryId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='gradeCategoryId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<bool?> IsGradeCategoryAssignedToCourseAsync(this IGradeBookApi operations, string gradeCategoryId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.IsGradeCategoryAssignedToCourseWithHttpMessagesAsync(gradeCategoryId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
