// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace XWinji
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SpaceApi.
    /// </summary>
    public static partial class SpaceApiExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelAddEditSpaceViewModel GetAddEditSpaceDetails(this ISpaceApi operations, string lang)
            {
                return operations.GetAddEditSpaceDetailsAsync(lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelAddEditSpaceViewModel> GetAddEditSpaceDetailsAsync(this ISpaceApi operations, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAddEditSpaceDetailsWithHttpMessagesAsync(lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addSpaceCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static string AddSpace(this ISpaceApi operations, LMSApplicationCoreCommandsAddUpdateSpaceCommand addSpaceCommand, string lang)
            {
                return operations.AddSpaceAsync(addSpaceCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addSpaceCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> AddSpaceAsync(this ISpaceApi operations, LMSApplicationCoreCommandsAddUpdateSpaceCommand addSpaceCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddSpaceWithHttpMessagesAsync(addSpaceCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSDomainCoreModelsUserSpacesView> GetUserSpacesList(this ISpaceApi operations, string lang)
            {
                return operations.GetUserSpacesListAsync(lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSDomainCoreModelsUserSpacesView>> GetUserSpacesListAsync(this ISpaceApi operations, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUserSpacesListWithHttpMessagesAsync(lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='updateSpaceCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSDomainCoreModelsUserSpacesView UpdateSpace(this ISpaceApi operations, LMSApplicationCoreCommandsAddUpdateSpaceCommand updateSpaceCommand, string lang)
            {
                return operations.UpdateSpaceAsync(updateSpaceCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='updateSpaceCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSDomainCoreModelsUserSpacesView> UpdateSpaceAsync(this ISpaceApi operations, LMSApplicationCoreCommandsAddUpdateSpaceCommand updateSpaceCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateSpaceWithHttpMessagesAsync(updateSpaceCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSDomainCoreModelsUserSpacesView> GetSpaceDetails(this ISpaceApi operations, string spaceId, string lang)
            {
                return operations.GetSpaceDetailsAsync(spaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSDomainCoreModelsUserSpacesView>> GetSpaceDetailsAsync(this ISpaceApi operations, string spaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSpaceDetailsWithHttpMessagesAsync(spaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSDomainCoreModelsUserProfile> GetUsersOnSpace(this ISpaceApi operations, string spaceId, string lang)
            {
                return operations.GetUsersOnSpaceAsync(spaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSDomainCoreModelsUserProfile>> GetUsersOnSpaceAsync(this ISpaceApi operations, string spaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetUsersOnSpaceWithHttpMessagesAsync(spaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userSpace'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static bool? DeleteUserOnSpace(this ISpaceApi operations, object userSpace, string lang)
            {
                return operations.DeleteUserOnSpaceAsync(userSpace, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='userSpace'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<bool?> DeleteUserOnSpaceAsync(this ISpaceApi operations, object userSpace, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteUserOnSpaceWithHttpMessagesAsync(userSpace, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='currentSpaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static bool? LeaveSpace(this ISpaceApi operations, object currentSpaceId, string lang)
            {
                return operations.LeaveSpaceAsync(currentSpaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='currentSpaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<bool?> LeaveSpaceAsync(this ISpaceApi operations, object currentSpaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.LeaveSpaceWithHttpMessagesAsync(currentSpaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='currentSpaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static object JoinSpace(this ISpaceApi operations, object currentSpaceId, string lang)
            {
                return operations.JoinSpaceAsync(currentSpaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='currentSpaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> JoinSpaceAsync(this ISpaceApi operations, object currentSpaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.JoinSpaceWithHttpMessagesAsync(currentSpaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static bool? DeleteSpace(this ISpaceApi operations, string spaceId, string lang)
            {
                return operations.DeleteSpaceAsync(spaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<bool?> DeleteSpaceAsync(this ISpaceApi operations, string spaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteSpaceWithHttpMessagesAsync(spaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addEditResourcesFolder'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelSpaceSpaceFolderViewModel AddResourceFolder(this ISpaceApi operations, LMSApplicationCoreCommandsSpaceAddEditResourcesFolder addEditResourcesFolder, string lang)
            {
                return operations.AddResourceFolderAsync(addEditResourcesFolder, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addEditResourcesFolder'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelSpaceSpaceFolderViewModel> AddResourceFolderAsync(this ISpaceApi operations, LMSApplicationCoreCommandsSpaceAddEditResourcesFolder addEditResourcesFolder, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddResourceFolderWithHttpMessagesAsync(addEditResourcesFolder, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelSpaceSpaceFolderViewModel> GetResourcesFoldersBySpaceId(this ISpaceApi operations, string spaceId, string lang)
            {
                return operations.GetResourcesFoldersBySpaceIdAsync(spaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelSpaceSpaceFolderViewModel>> GetResourcesFoldersBySpaceIdAsync(this ISpaceApi operations, string spaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetResourcesFoldersBySpaceIdWithHttpMessagesAsync(spaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='folderId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelSpaceSpaceFolderViewModel GetFolder(this ISpaceApi operations, string folderId, string lang)
            {
                return operations.GetFolderAsync(folderId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='folderId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelSpaceSpaceFolderViewModel> GetFolderAsync(this ISpaceApi operations, string folderId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetFolderWithHttpMessagesAsync(folderId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addEditResourcesFolder'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelSpaceSpaceFolderViewModel UpdateResourceFolder(this ISpaceApi operations, LMSApplicationCoreCommandsSpaceAddEditResourcesFolder addEditResourcesFolder, string lang)
            {
                return operations.UpdateResourceFolderAsync(addEditResourcesFolder, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addEditResourcesFolder'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelSpaceSpaceFolderViewModel> UpdateResourceFolderAsync(this ISpaceApi operations, LMSApplicationCoreCommandsSpaceAddEditResourcesFolder addEditResourcesFolder, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateResourceFolderWithHttpMessagesAsync(addEditResourcesFolder, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='folder'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static LMSApplicationCoreViewModelSpaceDeleteContainerViewModel DeleteResourceFolder(this ISpaceApi operations, object folder, string lang)
            {
                return operations.DeleteResourceFolderAsync(folder, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='folder'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<LMSApplicationCoreViewModelSpaceDeleteContainerViewModel> DeleteResourceFolderAsync(this ISpaceApi operations, object folder, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteResourceFolderWithHttpMessagesAsync(folder, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelSpaceSpacePhotoViewModel> GetSpacePhotos(this ISpaceApi operations, string spaceId, string lang)
            {
                return operations.GetSpacePhotosAsync(spaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelSpaceSpacePhotoViewModel>> GetSpacePhotosAsync(this ISpaceApi operations, string spaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSpacePhotosWithHttpMessagesAsync(spaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='keyWord'>
            /// </param>
            /// <param name='listOption'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSDomainCoreModelsUserSpacesView> GetSpacesByTitle(this ISpaceApi operations, string keyWord, int listOption, string lang)
            {
                return operations.GetSpacesByTitleAsync(keyWord, listOption, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='keyWord'>
            /// </param>
            /// <param name='listOption'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSDomainCoreModelsUserSpacesView>> GetSpacesByTitleAsync(this ISpaceApi operations, string keyWord, int listOption, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetSpacesByTitleWithHttpMessagesAsync(keyWord, listOption, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelUserProfileBasicInfoViewModel> GetLearnersOnSpace(this ISpaceApi operations, string spaceId, string lang)
            {
                return operations.GetLearnersOnSpaceAsync(spaceId, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='spaceId'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelUserProfileBasicInfoViewModel>> GetLearnersOnSpaceAsync(this ISpaceApi operations, string spaceId, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetLearnersOnSpaceWithHttpMessagesAsync(spaceId, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addMembersCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            public static IList<LMSApplicationCoreViewModelSpaceMemberViewModel> AddSpaceMembers(this ISpaceApi operations, LMSApplicationCoreCommandsSpaceAddMembersCommand addMembersCommand, string lang)
            {
                return operations.AddSpaceMembersAsync(addMembersCommand, lang).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='addMembersCommand'>
            /// </param>
            /// <param name='lang'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<LMSApplicationCoreViewModelSpaceMemberViewModel>> AddSpaceMembersAsync(this ISpaceApi operations, LMSApplicationCoreCommandsSpaceAddMembersCommand addMembersCommand, string lang, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddSpaceMembersWithHttpMessagesAsync(addMembersCommand, lang, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
